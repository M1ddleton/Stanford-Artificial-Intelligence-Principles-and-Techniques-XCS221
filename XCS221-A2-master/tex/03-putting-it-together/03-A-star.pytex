\item \points{3c}

Let's find a way to speed up the joint insertion of space and vowel with A\mbox{*}.
Recall that one way to find the heuristic function $h(s)$ for A\mbox{*} is to define a
relaxed search problem $P_\text{rel}$ where
$\text{Cost}_\text{rel}(s,a)\le \text{Cost}(s,a)$, and then $h(s)$ is defined to
be $\text{FutureCost}_\text{rel}(s)$.

Given a bigram model $b$, a function that takes any $(w',w)$ and returns a
number, define a unigram model $f_b$, another function that takes any $w$ and
returns a number, based on $b$.

Use this function $f_b$ to help define $P_\text{rel}$.

One example of a $f_b$ is $f_b(w)=b(w,w)$. However, this will not lead to a
consistent heuristic because $\text{Cost}_\text{rel}(s,a)$ is not guaranteed to
be less than or equal to $\text{Cost}(s,a)$ with this scheme.

Explicitly define the states, actions, cost, start state, and end state of the
relaxed problem and explain why $h(s)$ is consistent.

{\em Hint: If $f_b$ only accepts a single $w$, do we need to keep track of the
previous word in our state?}

üêç
import re
with open('submission.tex') as f: print((re.search(r'% <SCPD_SUBMISSION_TAG>_3c(.*?)% <SCPD_SUBMISSION_TAG>_3c', f.read(), re.DOTALL)).group(1))
üêç
