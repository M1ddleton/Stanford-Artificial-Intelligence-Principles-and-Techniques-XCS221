\item \points{2a}
Consider the following greedy-algorithm: from left to right, repeatedly pick the
immediate-best vowel insertion for the current vowel-free word, given the
insertion that was chosen for the previous vowel-free word. This algorithm does
{\em not} take into account future insertions beyond the current word. \\

Show, as in problem 1, that this greedy algorithm is suboptimal, by providing a
realistic counter-example using English text. Make any assumptions you'd like
about |possibleFills| and the bigram cost function, but bigram costs must remain
positive. \\

In creating this example, lower cost should indicate better fluency. Note that the cost function doesn't need to be explicitly defined. You can just point out the relative cost of different word sequences that are relevant to the example you provide. And your example should be based on a realistic English word sequence ‚Äî don't simply use abstract symbols with designated costs. Limit your answers to 4 sentences max to receive full credits. \\

\textbf{What we expect:} A specific (realistic) example explained within a couple of sentences.

üêç
import re
with open('submission.tex') as f: print((re.search(r'% <SCPD_SUBMISSION_TAG>_2a(.*?)% <SCPD_SUBMISSION_TAG>_2a', f.read(), re.DOTALL)).group(1))
üêç